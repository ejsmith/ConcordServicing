// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.SignalR;
using Microsoft.Extensions.Logging;

namespace Internal.Generated.WolverineHandlers
{
    // START: CustomerAddressUpdatedHandler692646519
    public class CustomerAddressUpdatedHandler692646519 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Microsoft.AspNetCore.SignalR.IHubContext<ConcordServicing.Web.Api.ClientAppEventsHub> _hubContext;
        private readonly Microsoft.Extensions.Logging.ILogger<ConcordServicing.Web.Handlers.CustomerHandler> _logger;

        public CustomerAddressUpdatedHandler692646519(Microsoft.AspNetCore.SignalR.IHubContext<ConcordServicing.Web.Api.ClientAppEventsHub> hubContext, Microsoft.Extensions.Logging.ILogger<ConcordServicing.Web.Handlers.CustomerHandler> logger)
        {
            _hubContext = hubContext;
            _logger = logger;
        }



        public override System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            var clientAppEventDispatcher = new ConcordServicing.Web.Api.ClientAppEventDispatcher(_hubContext);
            var customerAddressUpdated = (ConcordServicing.Data.Messages.CustomerAddressUpdated)context.Envelope.Message;
            return ConcordServicing.Web.Handlers.CustomerHandler.Handle(customerAddressUpdated, clientAppEventDispatcher, _logger);
        }

    }

    // END: CustomerAddressUpdatedHandler692646519
    
    
}

